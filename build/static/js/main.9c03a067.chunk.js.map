{"version":3,"sources":["components/fileInput/fileItem/file-item.svg","components/fileInput/fileItem/trash.svg","components/fileInput/file.svg","constants/index.js","utils/localStorage.js","reducers/messages.js","reducers/index.js","actions/index.js","API/index.js","utils/sendSay.js","utils/date.js","sagas/messages.js","utils/validation.js","components/input/index.js","components/textarea/index.js","components/fileInput/fileItem/index.js","components/fileInput/index.js","components/button/index.js","components/modal/index.js","modules/Form/Form.js","components/dropZone/index.js","utils/base64.js","modules/Form/dataFields.js","modules/Form/FormContainer.js","components/flexTable/index.js","modules/MessagesTable/MessagesTable.js","App.js","index.js"],"names":["module","exports","REQUEST_MESSAGES","REQUEST_SUCCESS_MESSAGES","REQUEST_FAIL_MESSAGES","UPDATE_MESSAGE_TRACK","UPDATE_MESSAGE_SUCCES_TRACK","saveMessageLS","message","messages","messagesStr","localStorage","getItem","JSON","parse","push","setItem","stringify","updateMessageToLS","updatedMessage","idx","findIndex","el","trackId","splice","msgLS","getMessagesFromLS","initialState","data","length","loading","currentMessage","combineReducers","state","action","type","payload","requestSuccesMessages","sendsay","this","Sendsay","auth","login","process","password","create","getMessageTrack","subject","fromName","fromEmail","toName","toEmail","attaches","request","value","map","file","name","content","encoding","then","res","getMessageStatus","obj","status","mL","getDate","dateObj","Date","month","getUTCMonth","day","getUTCDate","requestMessage","updateMessageTrack","saga","call","API","date","title","put","i","updatedStatus","takeLatest","validateInput","test","String","toLowerCase","Input","className","onChange","props","ev","target","error","TextArea","FileItem","onRemove","src","icon","alt","onClick","iconTrash","FileInput","changeHandler","removeFileHandler","inputEl","useRef","key","htmlFor","ref","accept","id","multiple","current","files","Button","disabled","children","Modal","Form","fields","formError","handlerInputChange","handlerAttachesChange","handlerRemoveFile","submitHandler","onSubmit","isMessageLoading","DropZone","dropFilesHandler","useDropzone","onDrop","acceptedFiles","noClick","getRootProps","isDragActive","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","initialFields","placeholder","connect","requestMessages","useState","setFields","setFormError","isLoading","setIsLoading","filesLessMaxSize","filter","size","reduce","acc","attachedFiles","a","async","file64","convertToBase64","all","sendMessage","validateFields","isValid","prop","useEffect","setTimeout","preventDefault","FlexTable","msgState","reversedMessages","reverse","App","sagaMiddleware","createSagaMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","run","messageSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c03a067.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/file-item.b202d438.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.f81c7834.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.6a4388d1.svg\";","export const REQUEST_MESSAGES = \"REQUEST_MESSAGES\";\nexport const REQUEST_SUCCESS_MESSAGES = \"REQUEST_SUCCESS_MESSAGES\";\nexport const REQUEST_FAIL_MESSAGES = \"REQUEST_FAIL_MESSAGES\";\n\nexport const REQUEST_MESSAGES_STATUS = \"REQUEST_MESSAGES_STATUS\";\nexport const REQUEST_SUCCESS_MESSAGES_STATUS = \"REQUEST_SUCCESS_MESSAGES_STATUS\";\nexport const REQUEST_FAIL_MESSAGES_STATUS = \"REQUEST_FAIL_MESSAGES_STATUS\";\n\nexport const UPDATE_MESSAGE_TRACK = \"UPDATE_MESSAGE_TRACK\";\nexport const UPDATE_MESSAGE_SUCCES_TRACK = \"UPDATE_MESSAGE_SUCCES_TRACK\";","export const saveMessageLS = (message) => {\n    let messages = [];\n    const messagesStr = localStorage.getItem(\"messages\");\n\n    if (messagesStr) {\n        messages = JSON.parse(messagesStr);\n    } \n    messages.push(message);\n\n    localStorage.setItem(\"messages\", JSON.stringify(messages))\n}\n\nexport const getMessagesFromLS = () => {\n    const messagesStr = localStorage.getItem(\"messages\");\n\n    if (messagesStr) {\n        return JSON.parse(messagesStr);\n    }\n\n    return null;\n}\n\nexport const updateMessageToLS = (updatedMessage) => {\n    const messagesStr = localStorage.getItem(\"messages\");\n\n    if (messagesStr) {\n        const messages = JSON.parse(messagesStr);\n        const idx = messages.findIndex(el => el.trackId === updatedMessage.trackId);\n        messages.splice(idx, 1, updatedMessage);\n        localStorage.setItem(\"messages\", JSON.stringify([...messages]))\n    }\n}","import {\n    REQUEST_MESSAGES,\n    REQUEST_SUCCESS_MESSAGES,\n    REQUEST_FAIL_MESSAGES,\n    UPDATE_MESSAGE_SUCCES_TRACK\n} from '../constants';\n\nimport { getMessagesFromLS } from 'utils/localStorage';\n\nconst msgLS = getMessagesFromLS();\n\nconst initialState = {\n    data: (msgLS && msgLS.length) ? msgLS : [],\n    loading: false,\n    currentMessage: {},\n};\n\nexport default (state = initialState, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case REQUEST_MESSAGES:\n            return {\n                ...state,\n                currentMessage: payload.message,\n                loading: payload.loading\n            };\n        case REQUEST_SUCCESS_MESSAGES:\n            return {\n                ...state,\n                data: [...state.data, payload.message],\n                loading: payload.loading\n            };\n        case REQUEST_FAIL_MESSAGES:\n            return {\n                ...state,\n                loading: payload.loading\n            };\n        case UPDATE_MESSAGE_SUCCES_TRACK:\n            const { message } = payload;\n            const idx = state.data.findIndex(el => el.trackId === message.trackId);\n            state.data.splice(idx, 1, message);\n\n            return {\n                ...state,\n                data: [...state.data]\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport messages from './messages';\n\nexport default combineReducers({\n    messages,\n});\n","import {\n    REQUEST_MESSAGES,\n    REQUEST_SUCCESS_MESSAGES,\n    REQUEST_FAIL_MESSAGES,\n    UPDATE_MESSAGE_TRACK,\n    UPDATE_MESSAGE_SUCCES_TRACK,\n} from '../constants';\n\nexport function requestMessages(message) {\n    return {\n        type: REQUEST_MESSAGES,\n        payload: {\n            message,\n            loading: true,\n        }\n    }\n}\n\nexport function requestSuccesMessages(updatedMessage) {\n    return {\n        type: REQUEST_SUCCESS_MESSAGES,\n        payload: {\n            message: updatedMessage,\n            loading: false,\n        }\n    }\n}\n\nexport function requestFailMessages(error) {\n    return {\n        type: REQUEST_FAIL_MESSAGES,\n        payload: {\n            loading: false,\n        }\n    }\n}\n\nexport function updateMessageTrack(messages) {\n    return {\n        type: UPDATE_MESSAGE_TRACK,\n        payload: {\n            messages,\n        }\n    }\n}\n\nexport function updateMessageSuccessTrack(message) {\n    return {\n        type: UPDATE_MESSAGE_SUCCES_TRACK,\n        payload: {\n            message,\n        }\n    }\n}\n","import sendsayCreater from 'utils/sendSay';\n\nconst sendsay = sendsayCreater.create();\n\nconst getMessageTrack = ({subject, fromName, fromEmail, toName, toEmail, messages, attaches} ) => {\n    return sendsay.request({\n        \"action\" : \"issue.send.test\",\n        \"letter\" : {\n        \"subject\" : subject.value,\n        \"from.name\" : fromName.value ,\n        \"from.email\" : fromEmail.value,\n        \"to.name\" : toName.value,\n        \"message\": { \"text\" : messages.value },\n        \"attaches\": attaches.map(file => ({\n            \"name\": file.name,\n            \"content\": file.content,\n            \"encoding\": file.encoding,\n        }))\n        },\n        \"sendwhen\": \"test\",\n        \"mca\": [toEmail.value],\n    }).then(res => res['track.id']);\n}\n\nconst getMessageStatus = trackId => {\n    return sendsay.request({\n        \"action\": \"track.get\",\n        \"id\": trackId,\n        \"session\": \"session\",\n    }).then(res =>  res.obj.status);\n}\n\nexport default {\n    getMessageTrack,\n    getMessageStatus,\n}\n","import Sendsay from 'sendsay-api';\n\nclass createSendSay {\n    create() {\n        if (this.sendsay) {\n            return this.sendsay;\n        }\n\n       return this.sendsay = new Sendsay({\n            auth: {\n                login: process.env.REACT_APP_USER, \n                password: process.env.REACT_APP_PASSWORD,\n            }\n        });\n    }\n}\n\nconst sendsay = new createSendSay();\n\nexport default sendsay;\n","const mL = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\nexport const getDate = () => {\n    const dateObj = new Date();\n    const month = dateObj.getUTCMonth();\n    const day = dateObj.getUTCDate();\n\n    return `${day} ${mL[month]}`;\n}","import { call, put, takeLatest } from 'redux-saga/effects';\nimport {\n   REQUEST_MESSAGES,\n   UPDATE_MESSAGE_TRACK,\n} from 'constants/index';\n\nimport {\n    requestSuccesMessages,\n    requestFailMessages,\n    updateMessageSuccessTrack\n} from 'actions/index';\n\nimport API from 'API/index';\nimport { getDate } from 'utils/date';\nimport { saveMessageLS, updateMessageToLS } from 'utils/localStorage';\n\n\nfunction* requestMessage(action) {\n   try {\n     const { message } = action.payload;\n     const trackId = yield call(API.getMessageTrack, message);\n\n     const updatedMessage = {\n         date: getDate(),\n         title: message.subject.value,\n         status: 1,\n         trackId\n     }\n\n     saveMessageLS(updatedMessage);\n     updatedMessage.status = yield call(API.getMessageStatus, trackId);\n\n     yield put(requestSuccesMessages(updatedMessage));\n   } catch (e) {\n      yield put(requestFailMessages(e.message));\n   }\n}\n\nfunction* updateMessageTrack(action) {\n   const { messages } = action.payload;\n\n   for (let i = 0; i < messages.length; i++) {\n      const { status, trackId } = messages[i];\n      if (status > -1) {\n         const updatedStatus = yield call(API.getMessageStatus, trackId);\n\n         if (+status !== +updatedStatus) {\n            const updatedMessage = {\n               ...messages[i],\n               status: +updatedStatus\n            }\n            updateMessageToLS(updatedMessage);\n            yield put(updateMessageSuccessTrack(updatedMessage));\n         }\n      }\n   }\n}\n\nfunction* saga() {\n  yield takeLatest(REQUEST_MESSAGES, requestMessage);\n  yield takeLatest(UPDATE_MESSAGE_TRACK, updateMessageTrack);\n}\n\nexport default saga;\n","export const validateInput = (value, type) => {\n    if (type === 'text') {\n        return value.length ? null : 'Поле не может быть пустым';\n    }\n\n    if (type === 'email') {\n        if (!value.length) {\n            return 'Поле не может быть пустым';\n        } else {\n            return validateEmail(value) ? null : 'Поле заполнено не корректно';\n        }\n    }\n}\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from 'utils/validation';\n\nimport './style.scss';\n\n const Input = ({className, onChange, name, ...props}) => {\n    const handlerChange = (ev) => {\n        const {value} = ev.target;\n        const error = validateInput(value, props.type);\n        onChange({name, value, error});\n    }\n\n    return (\n        <div className=\"input-wrap\">\n            <input\n                className={`input ${className}`}\n                onChange={handlerChange}\n                {...props}\n            />\n            {\n                props.error && <p className=\"input__error\">{props.error}</p>\n            }\n        </div>\n    )\n}\n\nInput.propTypes = {\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    callback: PropTypes.func\n}\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { validateInput } from 'utils/validation';\n\nimport './style.scss';\n\nconst TextArea = ({onChange, name, ...props}) => {\n    const handlerChange = (ev) => {\n        const {value} = ev.target;\n        const error = validateInput(value, props.type);\n        onChange({name, value, error});\n    }\n\n    return (\n        <div className=\"input-wrap\">\n            <textarea\n                className=\"textarea\"\n                onChange={handlerChange}\n                {...props}\n            >\n            </textarea>\n            {\n                props.error && <p className=\"input__error\">{props.error}</p>\n            }\n        </div>\n    )\n}\n\nTextArea.propTypes = {\n    type: PropTypes.string,\n    placeholder: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    handlerChange: PropTypes.func,\n}\n\nexport default TextArea;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport icon from './file-item.svg';\nimport iconTrash from './trash.svg';\nimport './style.scss';\n\nconst FileItem = ({file, idx, onRemove}) => {\n    return <div className=\"file-item\">\n        <img\n            className=\"file-item__ico\"\n            src={icon} alt=''\n        />\n        <span className=\"file-item__name\">{file.name}</span>\n        <button\n            type=\"button\"\n            onClick={() => onRemove(idx)}\n            className=\"file-item__btn\"\n        >\n            <img src={iconTrash} alt=\"\" />\n            Удалить\n        </button>\n    </div>\n}\n\nFileItem.propTypes = {\n    file: PropTypes.object,\n    idx: PropTypes.number,\n    onRemove: PropTypes.func,\n}\n\nexport default FileItem;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport FileItem from './fileItem';\n\nimport './style.scss';\nimport icon from './file.svg';\n\nconst FileInput = ({changeHandler, attaches, removeFileHandler}) => {\n    const inputEl = useRef(null);\n\n    const changeFileHandler = () => {\n      changeHandler( [...inputEl.current.files]);\n    }\n\n    return (\n        <div className=\"file-input\">\n            {\n              !!attaches.length && (\n                <div className=\"file-input__files\">\n                  {\n                    attaches.map((file, i) => {\n                      return <FileItem\n                                onRemove={removeFileHandler}\n                                key={i}\n                                idx={i}\n                                file={file}\n                            />\n                    })\n                  }\n                </div>\n              )\n            }\n            <img src={icon} alt='' />\n            <label htmlFor=\"file\" className=\"file-input__label\">Прикрепить файл</label>\n            <input\n              ref={inputEl}\n              type=\"file\"\n              accept=\"image/*, .doc, .xls, .pdf, .zip\"\n              id=\"file\"\n              name=\"file\"\n              multiple\n              onChange={changeFileHandler}\n            />\n        </div>\n    )\n}\n\nFileInput.propTypes = {\n  changeHandler: PropTypes.func,\n  removeFileHandler: PropTypes.func,\n  attaches: PropTypes.array,\n}\n\nexport default FileInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst Button = ({disabled, children}) => {\n    return (\n    <button\n        className=\"btn\"\n        disabled={disabled}\n    >\n        {children}\n    </button>\n    )\n}\n\nButton.propTypes = {\n    disabled: PropTypes.bool,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst Modal = ({children}) => {\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__inner\">\n                {children}\n            </div>\n        </div>\n    )\n}\n\nModal.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/input';\nimport TextArea from 'components/textarea';\nimport FileInput from 'components/fileInput';\nimport Button from 'components/button';\nimport Modal from 'components/modal';\n\nimport './style.scss';\n\nconst Form = ({\n    fields, formError, handlerInputChange, handlerAttachesChange,\n    handlerRemoveFile, submitHandler, ...props}) => {\n    return (\n        <form className=\"form\" onSubmit={submitHandler}>\n            <h1 className=\"form__title\">Отправлялка сообщений</h1>\n\n            <div>\n                <label className=\"form__label\">От кого</label>\n                <div className=\"form-row\">\n                    <Input\n                        onChange={handlerInputChange}\n                        {...fields.fromName}\n                    />\n                    <Input\n                        onChange={handlerInputChange}\n                        {...fields.fromEmail}\n                    />\n                </div>\n            </div>\n\n            <div>\n                <label className=\"form__label\">Кому</label>\n                <div className=\"form-row\">\n                    <Input\n                        onChange={handlerInputChange}\n                        {...fields.toName}\n                    />\n                    <Input\n                        onChange={handlerInputChange}\n                        {...fields.toEmail}\n                    />\n            </div>\n            </div>\n\n            <div>\n                <label className=\"form__label\">Тема письма</label>\n                <div className=\"form-row\">\n                    <Input\n                        onChange={handlerInputChange}\n                        {...fields.subject}\n                    />\n                </div>\n            </div>\n\n            <div>\n                <label className=\"form__label\">Сообщение</label>\n                <div className=\"form-row\">\n                    <TextArea\n                        onChange={handlerInputChange}\n                        {...fields.messages}\n                    />\n                </div>\n            </div>\n\n            <div>\n                <FileInput\n                    changeHandler={handlerAttachesChange}\n                    attaches={fields.attaches}\n                    removeFileHandler={handlerRemoveFile}\n                />\n            </div>\n            <Button disabled={formError}>Отправить</Button>\n\n            {\n                props.isMessageLoading ?\n                <Modal>\n                    <h2 className=\"modal__title\">\n                        Сообщение поставлено в очередь на отправку\n                    </h2>\n                    <p>\n                        Совсем скоро сообщение вылетит из сервера,\n                        и будет двигаться в сторону почты получателя\n                        «{props.currentMessage.toEmail.value}» со скоростью электронов.\n                    </p>\n                </Modal>\n                :null\n            }\n        </form>\n    )\n}\n\nForm.propTypes = {\n    fields: PropTypes.object,\n    formError: PropTypes.bool,\n    handlerAttachesChange: PropTypes.func,\n    handlerInputChange: PropTypes.func,\n    handlerRemoveFile: PropTypes.func,\n    submitHandler: PropTypes.func,\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\n\nimport './style.scss';\n\nconst DropZone = ({children, dropFilesHandler}) => {\n  const onDrop = acceptedFiles => dropFilesHandler(acceptedFiles);\n\n  const {getRootProps, isDragActive} = useDropzone({\n      onDrop,\n      noClick: true,\n      accept: \"image/*, .doc, .xls, .pdf, .zip\",\n    })\n\n  return (\n    <div\n        className=\"drop-zone\"\n        {...getRootProps()}\n    >\n      {children}\n      {\n        isDragActive ?\n          <div className=\"drop-zone__modal\">\n            <div className=\"drop-zone__modal__inner\">\n              <h2 className=\"drop-zone__title\">Бросайте файлы сюда, я ловлю</h2>\n              <p className=\"drop-zone__p\">\n                Мы принимаем картинки (jpg, png, gif),\n                офисные файлы (doc, xls, pdf) и zip-архивы. Размеры файла до 5 МБ\n              </p>\n            </div>\n          </div>\n          : null\n      }\n    </div>\n  )\n}\n\nDropZone.propTypes = {\n  dropFilesHandler: PropTypes.func,\n  children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n  ])\n}\n\nexport default DropZone;\n","const toBase64 = file => new Promise((resolve, reject) => { // TODO: ломается файл после отправки(конвертации?)\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n});\n\nasync function convertToBase64(file) {\n   const file64 = await toBase64(file);\n   return {\n       name: file.name,\n       content: file64,\n       encoding: 'base64',\n       size: file.size,\n   };\n}\n\nexport {\n    convertToBase64,\n}\n","export const initialFields = {\n    subject: {\n        name: 'subject',\n        type: 'text',\n        placeholder: 'Тема письма',\n        value: '',\n        error: null,\n    },\n    fromName: {\n        className: 'left-radius',\n        name: 'fromName',\n        type: 'text',\n        placeholder: 'Имя',\n        value: '',\n        error: null\n    },\n    fromEmail: {\n        className: 'right-radius',\n        name: 'fromEmail',\n        type: 'email',\n        placeholder: 'Email',\n        value: '',\n        error: null\n    },\n    toName: {\n        className: 'left-radius',\n        name: 'toName',\n        type: 'text',\n        placeholder: 'Имя',\n        value: '',\n        error: null\n    },\n    toEmail: {\n        className: 'right-radius',\n        name: 'toEmail',\n        type: 'email',\n        placeholder: 'Email',\n        value: '',\n        error: null\n    },\n    messages: {\n        type: 'text',\n        name: 'messages',\n        placeholder: 'Текст сообщения',\n        value: '',\n        error: null\n    },\n    attaches: []\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { validateInput } from 'utils/validation';\n\nimport { requestMessages } from 'actions/index';\n\nimport Form from './Form';\nimport DropZone from 'components/dropZone';\n\nimport { convertToBase64 } from 'utils/base64';\nimport { initialFields } from './dataFields';\n\nconst FormContainer = ({...props}) => {\n    const [fields, setFields] = useState(initialFields);\n    const [formError, setFormError] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const maxFileSize = 5; //MB\n    const maxAllFileSize = 20; //MB\n    const kbytes = 1024;\n\n    const handlerInputChange = ({name, value, error}) => {\n        setFields({\n            ...fields,\n            [name]: {\n                ...fields[name],\n                value,\n                error\n            }\n        })\n    }\n\n    const handlerAttachesChange = (files) => {\n        // filter files by maxSize\n        const filesLessMaxSize = files.filter(file => file.size/kbytes/kbytes < maxFileSize);\n\n        //check maxAllFileSize\n        const sumSize = [...fields.attaches, ...filesLessMaxSize].reduce((acc, file) => {\n            return acc + file.size;\n        }, 0)\n\n        if (sumSize/kbytes/kbytes < maxAllFileSize) {\n            const attachedFiles = filesLessMaxSize.map(file => {\n                return convertToBase64(file);\n            });\n\n            Promise.all(attachedFiles).then(attaches => {\n                setFields({\n                    ...fields,\n                    attaches: [\n                        ...fields.attaches,\n                        ...attaches,\n                    ]\n                })\n              })\n        }\n    }\n\n    const removeFileHandler = (idx) => {\n        fields.attaches.splice(idx, 1);\n\n        setFields({\n            ...fields,\n            attaches: [\n                ...fields.attaches,\n            ]\n        })\n    }\n\n    const clearFields = () => {\n        setFields(initialFields);\n    }\n\n    const sendMessage = (fields) => {\n        props.requestMessages(fields);\n        clearFields();\n    }\n\n    const submitHandler = (ev) => {\n        ev.preventDefault();\n\n        if (validateFields()) {\n            sendMessage(fields);\n        } else {\n            setFormError(false);\n        }\n    }\n\n    const validateFields = () => {\n        let isValid = true;\n\n        for (let prop in fields) {\n            const error = validateInput(fields[prop].value, fields[prop].type);\n            if (error) {\n                fields[prop].error = error;\n                isValid = false;\n            }\n        }\n\n        setFields({...fields});\n\n        return isValid;\n    }\n\n    useEffect(() => {\n        for (let prop in fields) {\n            if (fields[prop].error) {\n                return setFormError(true);\n            }\n        }\n\n        if (formError) {\n            setFormError(false);\n        }\n    }, [fields, formError]);\n\n    useEffect(() => {\n        if (props.isMessageLoading) {\n            setIsLoading(true);\n        } else {\n            setTimeout(() => setIsLoading(false), 4000);\n        }\n    }, [props.isMessageLoading])\n\n    return (\n        <DropZone\n            dropFilesHandler={handlerAttachesChange}\n        >\n            <Form\n                isMessageLoading={isLoading}\n                currentMessage={props.currentMessage}\n                fields={fields}\n                formError={formError}\n                submitHandler={submitHandler}\n                handlerInputChange={handlerInputChange}\n                handlerAttachesChange={handlerAttachesChange}\n                handlerRemoveFile={removeFileHandler}\n            />\n        </DropZone>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isMessageLoading: state.messages.loading,\n        currentMessage: state.messages.currentMessage\n    }\n}\n\nFormContainer.propTypes = {\n    isMessageLoading: PropTypes.bool,\n    currentMessage: PropTypes.object,\n    requestMessages: PropTypes.func\n}\n\nexport default connect(mapStateToProps, { requestMessages })(FormContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss';\n\nconst FlexTable = ({messages}) => {\n    const msgState = [\n        <div className=\"text-green\">Отправлено</div>,\n        <div className=\"text-gray\">В очереди</div>,\n        <div className=\"text-red\">Ошибка</div>,\n    ];\n\n    const reversedMessages = [...messages].reverse();\n\n    return (\n        <div className=\"flex-table-wrap\">\n            <h2 className=\"flex-table__title\">Отправленные сообщения</h2>\n            {\n                messages.length ?\n                <div>\n                    <div className=\"flex-table-header\">\n                        <div className=\"flex-table-row\">\n                            <div>Дата</div>\n                            <div>Тема</div>\n                            <div>Статус</div>\n                        </div>\n                    </div>\n                    <div className=\"flex-table-body\">\n                        {\n                            reversedMessages.map(({date, title, status, trackId: id}) => {\n                                return (\n                                    <div className=\"flex-table-row\" key={id}>\n                                        <div>{date}</div>\n                                        <div>{title}</div>\n                                        { \n                                            status === -1 ? msgState[0]\n                                            : status > -1 ? msgState[1] : msgState[2]\n                                        }\n                                    </div>)\n                            })\n                        }\n                    </div>\n                </div>  \n                : <p>Сообщения ещё не отправлялись</p>\n            }\n        </div>\n    )\n}\n\nFlexTable.propTypes = {\n    messages: PropTypes.array,\n}\n\nexport default FlexTable;","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { updateMessageTrack } from 'actions/index';\n\nimport FlexTable from 'components/flexTable';\n\nconst MessagesTable = ({messages, updateMessageTrack}) => {\n\n    useEffect(() => {\n        updateMessageTrack(messages);\n    }, [])\n\n    return <FlexTable messages={messages} />\n}\n\nfunction mapStateToProps(state) {\n    return {\n        messages: state.messages.data,\n    }\n}\n\nMessagesTable.propTypes = {\n    messages: PropTypes.array,\n    updateMessageTrack: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, {updateMessageTrack})(MessagesTable);\n","import React from 'react';\nimport FormContainer from './modules/Form/FormContainer';\nimport MessagesTable from './modules/MessagesTable/MessagesTable';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormContainer />\n      <MessagesTable />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from 'reducers';\nimport messageSaga from 'sagas/messages';\n\nimport App from './App';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n    rootReducer,\n    {},\n    enhancer\n);\n\nsagaMiddleware.run(messageSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}